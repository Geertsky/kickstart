#version=RHEL8

# Use text mode install and CDROM installation media
text
cdrom

# Disable the Setup Agent on first boot
firstboot --disable

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# The root password is empty and locked by default
rootpw --lock --iscrypted locked

# Do not configure the X Window System
skipx

# System services
services --disabled="kdump" --enabled="NetworkManager,sshd"

# System timezone
timezone Europe/Zurich --utc

# Configure firewall settings for the system. Recommended to disable for cloud systems
firewall --disabled

# State of SELinux on the installed system
selinux --enforcing

ignoredisk --only-use=vda

# Do not remove any partitions, but initializes a disk (or disks) by creating a default disk label
clearpart --none --initlabel

# System bootloader configuration
bootloader --location=mbr --boot-drive=vda --append="console=ttyS0,115200n8 no_timer_check net.ifnames=0 slub_debug=P page_poison=1 vsyscall=none"

# Boot Partition: Manual Partitioning with BIOS-/Legacy-Boot and XFS, on one partition
part /boot --fstype="xfs" --ondisk=vda --size=1024

# OS Partition
part pv.01 --fstype="lvmpv" --ondisk=vda --size=9215 --grow
# mbr only supports disks <= 2TB. To support larger disks, use gpt. However, when using bios boot and gpt, a boot partition is needed.
part biosboot --fstype=biosboot --size=1 --ondisk=vda

# LVM: Volume Group
volgroup rl --pesize=4096 pv.01

# LVM: LV
# all sizes are in MB
# Anaconda creates the LVs in reverse order; LVs listed at the end will be created first
logvol swap --fstype="swap" --recommended     --name=swap --vgname=rl
logvol /    --fstype="xfs" --grow --size=1024 --name=root --vgname=rl

# Network information
network --bootproto=dhcp --device=link --activate --onboot=on --hostname=localhost.localdomain

# Shutdown after installation
shutdown

%packages
@core
dhcp-client
qemu-guest-agent

-aic94xx-firmware
-alsa-firmware
-alsa-lib
-alsa-tools-firmware
-biosdevname
-iprutils
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-langpacks-*
-langpacks-en
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware

# No need for plymouth. Also means anaconda won't put rhgb/quiet
# on kernel command line
-plymouth
%end

%addon com_redhat_kdump --disable
%end


%post --erroronfail
# older versions of livecd-tools do not follow "rootpw --lock" line above
# https://bugzilla.redhat.com/show_bug.cgi?id=964299
passwd --delete root
passwd --lock root

# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
echo .

# this is installed by default but we don't need it in virt
# Commenting out the following for #1234504
# rpm works just fine for removing this, no idea why dnf can't cope
echo "Removing linux-firmware package."
rpm -e linux-firmware

# Remove firewalld; was supposed to be optional in F18+, but is pulled in
# in install/image building.
echo "Removing firewalld."
# FIXME! clean_requirements_on_remove is the default with DNF, but may
# not work when package was installed by Anaconda instead of command line.
# Also -- check if this is still even needed with new anaconda -- disabled
# firewall should _not_ pull in this package.
# yum -C -y remove "firewalld*" --setopt="clean_requirements_on_remove=1"
dnf --cacheonly -y erase "firewalld*"

# Another one needed at install time but not after that, and it pulls
# in some unneeded deps (like, newt and slang)
echo "Removing authconfig."
dnf --cacheonly -y erase authconfig

dnf --cacheonly -y remove avahi\*

# these tools always fail to install in the %packages section, so try this here
dnf -y install cloud-init cloud-utils-growpart rng-tools tuned
systemctl enable --now cloud-init
systemctl enable --now cloud-init-local
systemctl enable --now cloud-config
systemctl enable --now cloud-final
systemctl enable --now rngd

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

echo -n "Network fixes"
# initscripts don't like this file to be missing.
# and https://bugzilla.redhat.com/show_bug.cgi?id=1204612
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
DEVTIMEOUT=10
EOF

# Anaconda is writing an /etc/resolv.conf from the install environment.
# The system should start out with an empty file, otherwise cloud-init
# will try to use this information and may error:
# https://bugs.launchpad.net/cloud-init/+bug/1670052
truncate -s 0 /etc/resolv.conf

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

EOF
echo .

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
# However, there is no need to disable the mount, as we are already overwriting the options for /tmp above.
# Masking the mount now would lead to a missing /tmp.
# echo "Disabling tmpfs for /tmp."
# systemctl mask tmp.mount

echo "virtual-guest" > /etc/tuned/active_profile

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

# # linuxfabrik cloud user
echo -e 'linuxfabrik\tALL=(ALL)\tNOPASSWD: ALL' >> /etc/sudoers
sed -i 's/name: cloud-user/name: linuxfabrik/g' /etc/cloud/cloud.cfg

echo "Cleaning old dnf repodata."
dnf clean all

# chance dhcp client retry/timeouts to resolve #6866
cat  >> /etc/dhcp/dhclient.conf << EOF

timeout 300;
retry 60;
EOF

# reorder console entries
sed -i 's/console=tty0/console=tty0 console=ttyS0,115200n8/' /boot/grub2/grub.cfg

echo "Removing random-seed so it's not the same in every image."
rm -f /var/lib/systemd/random-seed

rm -rf /root/anaconda-ks.cfg
rm -rf /root/install.log
rm -rf /root/install.log.syslog
rm -rf /var/lib/yum/*
rm -rf /var/log/anaconda*
rm -rf /var/log/yum.log
rm -rf /var/tmp/*
find /var/log -type f -exec truncate --size=0 {} \;
rm -f /root/.wget-hsts
export HISTSIZE=0
cat /dev/null > ~/.bash_history
history -c

echo "Fixing SELinux contexts."
touch /var/log/cron
touch /var/log/boot.log
mkdir -p /var/cache/yum
# ignore return code because UEFI systems with vfat filesystems
# that don't support selinux will give us errors
/usr/sbin/fixfiles -R -a restore || true
%end
